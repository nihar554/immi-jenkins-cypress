// import UilBriefcaseAlt from '@iconscout/react-unicons/icons/uil-briefcase-alt';
// import UilAward from '@iconscout/react-unicons/icons/uil-award';
import propTypes from 'prop-types'
import React from 'react'
import { InfoCardStyle } from './Style'

function InfoCard ({ text, counter, type, isResident, setIsResident }) {
  return (
    <div
      className=""
      style={
        isResident === text
          ? {
              border: '2px solid #0042A8',
              cursor: 'pointer',
              boxShadow: '2px 2px 11px 1px rgba(0, 0, 0, 0.35)'
            }
          : { cursor: 'pointer', border: '2px solid #9D9D9D' }
      }
    >
      <InfoCardStyle type={type} onClick={() => setIsResident(text)}>
        {text === 'Buy Resident Card'
          ? (
          <svg width="84" height="74" viewBox="0 0 84 74" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              d="M27.183 27.1824C31.3146 27.1824 34.6638 23.8331 34.6638 19.7016C34.6638 15.57 31.3146 12.2207 27.183 12.2207C23.0514 12.2207 19.7021 15.57 19.7021 19.7016C19.7021 23.8331 23.0514 27.1824 27.183 27.1824Z"
              stroke="#0036C1"
              strokeWidth="2"
            />
            <path
              d="M42.1441 42.1439C42.1441 46.2771 42.1441 49.6248 27.1824 49.6248C12.2207 49.6248 12.2207 46.2771 12.2207 42.1439C12.2207 38.0108 18.9161 34.6631 27.1824 34.6631C35.4487 34.6631 42.1441 38.0108 42.1441 42.1439Z"
              stroke="#0036C1"
              strokeWidth="2"
            />
            <path
              d="M1 30.9234C1 16.8183 1 9.76381 5.38378 5.38378C9.76381 1 16.8183 1 30.9234 1H45.8851C59.9902 1 67.0447 1 71.4247 5.38378C75.8085 9.76381 75.8085 16.8183 75.8085 30.9234C75.8085 45.0285 75.8085 52.083 71.4247 56.463C67.0447 60.8468 59.9902 60.8468 45.8851 60.8468H30.9234C16.8183 60.8468 9.76381 60.8468 5.38378 56.463C1 52.083 1 45.0285 1 30.9234Z"
              stroke="#0036C1"
              strokeWidth="2"
            />
            <path
              d="M64.5879 30.9234H49.6262M64.5879 19.7021H45.8857"
              stroke="#0036C1"
              strokeWidth="2"
              strokeLinecap="round"
            />
            <path
              d="M65.3465 37.9657L51.3818 43.7191V57.8998C51.3818 65.4989 66.9671 72.7558 66.9671 72.7558C66.9671 72.7558 82.5524 65.4989 82.5524 57.8998V43.7191L68.5878 37.9657C68.0743 37.7518 67.5235 37.6416 66.9671 37.6416C66.4108 37.6416 65.86 37.7518 65.3465 37.9657Z"
              fill="white"
              stroke="#0036C1"
              strokeWidth="1.7"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            <path
              d="M72.7748 52.2285H66.9674V44.1973L61.2861 56.1001H67.0935V64.1313L72.7748 52.2285Z"
              fill="white"
              stroke="#0036C1"
              strokeWidth="1.7"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
            )
          : (
          <svg width="85" height="73" viewBox="0 0 85 73" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M30.5341 0.527344H45.8011C60.1941 0.527344 67.3925 0.527343 71.8619 5.00059C76.3352 9.47001 76.3352 16.6684 76.3352 31.0614C76.3352 45.4544 76.3352 52.6528 71.8619 57.1223C67.3925 61.5955 60.1941 61.5955 45.8011 61.5955H30.5341C16.1411 61.5955 8.94267 61.5955 4.47324 57.1223C-3.63995e-07 52.6528 0 45.4544 0 31.0614C0 16.6684 -3.63995e-07 9.47001 4.47324 5.00059C8.94267 0.527343 16.1411 0.527344 30.5341 0.527344ZM42.9385 19.6111C42.9385 18.8519 43.2401 18.1238 43.777 17.587C44.3138 17.0502 45.0419 16.7486 45.8011 16.7486H64.8849C65.6441 16.7486 66.3722 17.0502 66.9091 17.587C67.4459 18.1238 67.7475 18.8519 67.7475 19.6111C67.7475 20.3703 67.4459 21.0984 66.9091 21.6353C66.3722 22.1721 65.6441 22.4737 64.8849 22.4737H45.8011C45.0419 22.4737 44.3138 22.1721 43.777 21.6353C43.2401 21.0984 42.9385 20.3703 42.9385 19.6111ZM46.7553 31.0614C46.7553 30.3022 47.0569 29.5741 47.5937 29.0373C48.1306 28.5004 48.8587 28.1989 49.6179 28.1989H64.8849C65.6441 28.1989 66.3722 28.5004 66.9091 29.0373C67.4459 29.5741 67.7475 30.3022 67.7475 31.0614C67.7475 31.8206 67.4459 32.5487 66.9091 33.0856C66.3722 33.6224 65.6441 33.924 64.8849 33.924H49.6179C48.8587 33.924 48.1306 33.6224 47.5937 33.0856C47.0569 32.5487 46.7553 31.8206 46.7553 31.0614ZM34.3508 19.6111C34.3508 21.6357 33.5466 23.5773 32.115 25.0089C30.6835 26.4404 28.7419 27.2447 26.7173 27.2447C24.6928 27.2447 22.7512 26.4404 21.3196 25.0089C19.888 23.5773 19.0838 21.6357 19.0838 19.6111C19.0838 17.5866 19.888 15.645 21.3196 14.2134C22.7512 12.7819 24.6928 11.9776 26.7173 11.9776C28.7419 11.9776 30.6835 12.7819 32.115 14.2134C33.5466 15.645 34.3508 17.5866 34.3508 19.6111ZM26.7173 50.1452C41.9844 50.1452 41.9844 46.7292 41.9844 42.5117C41.9844 38.2942 35.1524 34.8782 26.7173 34.8782C18.2823 34.8782 11.4503 38.2942 11.4503 42.5117C11.4503 46.7292 11.4503 50.1452 26.7173 50.1452Z"
              fill="#0036C1"
            />
            <path
              d="M64.9851 39.5047C65.8911 39.0108 66.9066 38.752 67.9386 38.752C68.9706 38.752 69.986 39.0108 70.8921 39.5047L80.7522 44.8811C81.7257 45.4118 82.5381 46.195 83.1042 47.1483C83.6702 48.1017 83.969 49.1899 83.969 50.2986V60.4549C83.969 61.5636 83.6702 62.6519 83.1042 63.6052C82.5381 64.5585 81.7257 65.3417 80.7522 65.8724L70.8921 71.2488C69.986 71.7428 68.9706 72.0016 67.9386 72.0016C66.9066 72.0016 65.8911 71.7428 64.9851 71.2488L55.125 65.8724C54.1515 65.3417 53.3391 64.5585 52.773 63.6052C52.2069 62.6519 51.9082 61.5636 51.9082 60.4549V50.2966C51.9086 49.1882 52.2075 48.1004 52.7735 47.1475C53.3396 46.1945 54.1518 45.4117 55.125 44.8811L64.9851 39.5047Z"
              fill="white"
              stroke="#0036C1"
              strokeWidth="1.7"
            />
            <path
              d="M66.182 51.3101C66.9635 49.9074 67.3543 49.2061 67.9384 49.2061C68.5226 49.2061 68.9133 49.9074 69.6949 51.3101L69.8965 51.6721C70.1186 52.0711 70.2297 52.2686 70.4024 52.4023C70.5773 52.5318 70.7932 52.5812 71.2251 52.6799L71.6159 52.7684C73.1338 53.1118 73.8928 53.2826 74.0738 53.8646C74.2547 54.4446 73.7364 55.0493 72.7019 56.2587L72.4345 56.5713C72.1404 56.9168 71.9923 57.0876 71.9265 57.3015C71.8607 57.5133 71.8833 57.7416 71.9265 58.2023L71.9676 58.6198C72.1239 60.2323 72.2021 61.0407 71.7311 61.3985C71.258 61.7585 70.5464 61.4314 69.1252 60.7774L68.7591 60.6067C68.3539 60.4216 68.1523 60.329 67.9384 60.329C67.7245 60.329 67.523 60.4216 67.1178 60.6067L66.7517 60.7774C65.3305 61.4314 64.6188 61.7585 64.1458 61.3985C63.6727 61.0407 63.7529 60.2323 63.9092 58.6198L63.9504 58.2003C63.9936 57.7416 64.0162 57.5133 63.9504 57.3015C63.8846 57.0876 63.7365 56.9168 63.4424 56.5713L63.175 56.2587C62.1404 55.0493 61.6221 54.4446 61.8031 53.8646C61.9841 53.2826 62.7431 53.1118 64.2609 52.7684L64.6517 52.6799C65.0837 52.5812 65.2996 52.5318 65.4744 52.4023C65.6472 52.2706 65.7583 52.0711 65.9804 51.6721L66.182 51.3101Z"
              fill="white"
              stroke="#0036C1"
              strokeWidth="1.7"
            />
          </svg>
            )}
        <p className="ninjadash-infocard-text">{text}</p>
        <h6 className="ninjadash-infocard-label">{counter}</h6>
      </InfoCardStyle>
    </div>
  )
}

InfoCard.propTypes = {
  counter: propTypes.string,
  text: propTypes.string,
  type: propTypes.oneOf(['primary', 'secondary']),
  isResident: propTypes.bool,
  setIsResident: propTypes.bool
}

InfoCard.defaultProps = {
  counter: '21k',
  text: 'Total Products',
  type: 'primary'
}

export default InfoCard
